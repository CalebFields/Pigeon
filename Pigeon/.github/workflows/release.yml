name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo/target
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Build release
        run: cargo build --release

      - name: Package installers (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist
          cp target/release/secure-p2p-msg dist/
          cp target/release/pigeon-gui dist/ || true
          tar -C dist -czf pigeon-${{ runner.os }}.tar.gz .

      - name: Package installers (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/secure-p2p-msg.exe dist/
          if (Test-Path target/release/pigeon-gui.exe) { Copy-Item target/release/pigeon-gui.exe dist/ }
          Compress-Archive -Path dist/* -DestinationPath pigeon-Windows.zip -Force

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pigeon-${{ runner.os }}
          path: |
            pigeon-*.tar.gz
            pigeon-*.zip

  publish:
    name: publish GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


